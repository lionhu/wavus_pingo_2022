# Generated by Django 3.2.5 on 2021-11-01 04:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import mptt.fields
import store.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Baseitem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=store.models.image_path)),
                ('is_valid', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, default='_variation', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('price', models.IntegerField(default=0)),
                ('purchase_price', models.IntegerField(default=0)),
                ('extra_cost', models.IntegerField(default=0)),
                ('inventory', models.IntegerField(default=0)),
                ('sku', models.CharField(blank=True, max_length=128, null=True)),
                ('sort_by', models.IntegerField(default=0)),
                ('point_rule', jsonfield.fields.JSONField(blank=True, default=store.models.default_point_rule, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='label', max_length=64)),
                ('is_valid', models.BooleanField(default=False)),
                ('isTitle', models.BooleanField(default=True)),
                ('isMenuCollapsed', models.BooleanField(default=True)),
                ('access', jsonfield.fields.JSONField(blank=True, default={'client_admin': False, 'superadmin': True, 'supplier': False}, null=True)),
                ('icon', models.CharField(blank=True, default='ri-dashboard-line', max_length=128, null=True)),
                ('badge', jsonfield.fields.JSONField(blank=True, default={'text': 'menuitems.dashboard.badge', 'variant': 'success'}, null=True)),
                ('link', models.CharField(blank=True, default='/', max_length=128, null=True)),
                ('sort_by', models.IntegerField(default=0)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='store.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(default='REGULAR', max_length=10)),
                ('content', models.TextField(default='')),
                ('rate', models.IntegerField(default=5)),
                ('thumbs_up', models.IntegerField(default=0)),
                ('thumbs_down', models.IntegerField(default=0)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=store.models.image_path)),
                ('item_name', models.CharField(default='_item_name_', max_length=100)),
                ('brand', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('series', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('model', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('type', models.CharField(choices=[('REGULAR', 'Regular'), ('PINGO', 'Pingo')], default='REGULAR', max_length=10)),
                ('sort_by', models.IntegerField(default=0)),
                ('labels', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('package', models.TextField(blank=True, default='', null=True)),
                ('rate', models.IntegerField(default=5)),
                ('video_url', models.CharField(default='', max_length=256)),
                ('is_valid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_items', to='store.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Logistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(default='クロネコヤマト', max_length=64)),
                ('short_name', models.CharField(choices=[('yamato', 'クロネコヤマト'), ('sagawa', '佐川急便'), ('jppost_pack', 'ゆうパック'), ('jppost_mail', '郵便書留'), ('seino', '西濃運輸'), ('seibu', '西武運輸'), ('fukutsu', '福山通運'), ('nittsu_air', '日通航空'), ('ems', 'EMS'), ('dhl', 'DHL'), ('ups', 'UPS'), ('fedex', 'FedEx'), ('wavus', 'Wavus'), ('others', 'Others')], default='yamato', max_length=32)),
                ('is_valid', models.BooleanField(default=True)),
                ('track_link', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Margin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default='INTRODUCE_POINT', max_length=28, null=True)),
                ('order_type', models.CharField(blank=True, default='REGULAR', max_length=28, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('is_valid', models.BooleanField(default=False)),
                ('is_refound', models.IntegerField(default=-1)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('info', jsonfield.fields.JSONField(default=dict)),
                ('from_orderID', models.IntegerField(blank=True, default=0, null=True)),
                ('pointbank_saved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fromuser', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fromuser_margins', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='margins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('type', models.CharField(default='REGULAR', max_length=10)),
                ('status', models.CharField(choices=[('NEW', 'NEW'), ('PROCESSING', 'PROCESSING'), ('DELIVERING', 'DELIVERING'), ('FINISHED', 'FINISHED')], default='NEW', max_length=10)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('ordered', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=False)),
                ('cart_items', jsonfield.fields.JSONField(default=dict)),
                ('json_shippingaddress', jsonfield.fields.JSONField(default=dict)),
                ('Qty', models.IntegerField(default=0)),
                ('Total', models.IntegerField(default=0)),
                ('chargeAmount', models.IntegerField(default=0)),
                ('point_usage', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('order_bonus', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('message', models.TextField(blank=True, default='', null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(choices=[('CARD', 'CARD'), ('POINT', 'POINT'), ('MIX', 'MIX')], default='CARD', max_length=20)),
                ('payment_status', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('payment_id', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('payment_info', jsonfield.fields.JSONField(blank=True, default=store.models.empty_json, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PingoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=store.models.image_path)),
                ('item_name', models.CharField(default='_item_name_', max_length=100)),
                ('brand', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('series', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('model', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('sort_by', models.IntegerField(default=0)),
                ('labels', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('package', models.TextField(blank=True, default='', null=True)),
                ('rate', models.IntegerField(default=5)),
                ('video_url', models.CharField(default='', max_length=256)),
                ('is_valid', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('RECRUITING', 'RECRUITING'), ('PROCESSING', 'PROCESSING'), ('ESTABLISHED', 'ESTABLISHED'), ('RELEASED', 'RELEASED')], default='RECRUITING', max_length=28)),
                ('targetNum', models.IntegerField(default=1)),
                ('currentNum', models.IntegerField(default=0)),
                ('until_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('price', models.IntegerField(default=0)),
                ('discount_price', models.IntegerField(default=0)),
                ('purchase_price', models.IntegerField(default=0)),
                ('point_rule', jsonfield.fields.JSONField(blank=True, default=store.models.default_point_rule, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_pingo_items', to='store.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='section', max_length=64)),
                ('index', models.IntegerField(default=0)),
                ('is_valid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ViewProductHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default='REGULAR', max_length=16, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewproducts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Thumbs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb_type', models.CharField(default='up', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_thumbs', to='store.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_thumbs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('email', models.EmailField(blank=True, max_length=128, null=True)),
                ('website', models.CharField(default='', max_length=256)),
                ('phone', models.CharField(default='', max_length=32)),
                ('postcode', models.CharField(default='', max_length=20)),
                ('state', models.CharField(default='', max_length=64)),
                ('city', models.CharField(default='', max_length=64)),
                ('town', models.CharField(default='', max_length=64)),
                ('address_1', models.CharField(default='', max_length=128)),
                ('address_2', models.CharField(default='', max_length=128)),
                ('is_valid', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PointBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(blank=True, default=0, null=True)),
                ('until_at', models.DateTimeField(default=store.models.point_expired_date)),
                ('info', jsonfield.fields.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('margin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pointbank', to='store.margin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validpointbank', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PingoOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.IntegerField(default=0)),
                ('total', models.IntegerField(blank=True, default=0, null=True)),
                ('chargeAmount', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(default='RECRUITING', max_length=28)),
                ('is_paid', models.BooleanField(default=False)),
                ('point_usage', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('payment_method', models.CharField(choices=[('CARD', 'CARD'), ('POINT', 'POINT'), ('MIX', 'MIX')], default='CARD', max_length=20)),
                ('payment_status', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('payment_id', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('payment_info', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('json_shippingaddress', jsonfield.fields.JSONField(blank=True, default=None, null=True)),
                ('json_product', jsonfield.fields.JSONField(blank=True, default=None, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('delivered', models.BooleanField(blank=True, default=False, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_info', jsonfield.fields.JSONField(blank=True, default=store.models.default_delivery_info, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('logistic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.logistic')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='store.pingoitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pingo_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PingoItemSliderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=store.models.image_path)),
                ('is_valid', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, default='item_sliderimage', max_length=100, null=True)),
                ('http_referer', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_pingo_sliderimages', to='store.pingoitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pingoitem',
            name='supplier',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_pingo_items', to='store.supplier'),
        ),
        migrations.CreateModel(
            name='ItemSliderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=store.models.image_path)),
                ('is_valid', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, default='item_sliderimage', max_length=100, null=True)),
                ('http_referer', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_sliderimages', to='store.item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_items', to='store.supplier'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_favorites', to='store.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favorites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default='section', max_length=100)),
                ('index', models.IntegerField(default=0)),
                ('answer', models.TextField(default='')),
                ('is_valid', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='store.section')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_comments', to='store.item'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AddressBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('email', models.EmailField(max_length=128)),
                ('phone', models.CharField(max_length=56)),
                ('postcode', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=56)),
                ('town', models.CharField(max_length=56)),
                ('city', models.CharField(max_length=128)),
                ('address_1', models.CharField(max_length=256)),
                ('address_2', models.CharField(blank=True, max_length=256, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shippingaddress', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.baseitem')),
                ('variation_type', models.CharField(choices=[('REGULAR', 'Regular'), ('PINGO', 'Pingo')], default='REGULAR', max_length=10)),
                ('type', models.CharField(default='COLOR', max_length=50)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_variations', to='store.item')),
            ],
            options={
                'ordering': ('price',),
            },
            bases=('store.baseitem',),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('final_price', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='NEW', max_length=32, null=True)),
                ('delivered', models.BooleanField(blank=True, default=False, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_info', jsonfield.fields.JSONField(blank=True, default=store.models.default_delivery_info, null=True)),
                ('paid', models.BooleanField(blank=True, default=False, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('paid_info', jsonfield.fields.JSONField(blank=True, default=store.models.default_orderitem_payment_info, null=True)),
                ('logistic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderitems', to='store.logistic')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems', to='store.order')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems', to='store.variation')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('RS', 'RETURN STOCK'), ('BS', 'BUY STOCK'), ('OC', 'ORDER CANCELLED'), ('OU', 'ORDER USED')], default='OU', max_length=28)),
                ('in_out', models.IntegerField(default=-1)),
                ('quantity', models.IntegerField(default=1)),
                ('info', jsonfield.fields.JSONField(default={'description': '', 'order_id': 0})),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='store.variation')),
            ],
        ),
    ]
