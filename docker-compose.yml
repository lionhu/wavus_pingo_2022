version: '3.7'

services:
  https-portal:
    container_name: https-portal
    image: lionhu/pingo_https:v1
    ports:
      - 80:80
      - 443:443
    restart: always
    environment:
      DOMAINS: "www.pingo.jp -> http://pingo_daphne:8000"
      NPM_MODE: "dev"
      ERROR_LOG: "default"
      ACCESS_LOG: "default"
    volumes:
      - ./pingo/staticfiles/:/var/www/staticfiles/
      - ./pingo/mediafiles/:/var/www/mediafiles/
      - ./front_app/dist:/var/lib/https-portal/nuxtjs_front/dist
      - ./backend_app/dist:/var/lib/https-portal/nuxtjs_admin/dist
      - ./system/https_portal/html/:/etc/nginx/html/
      - ./system/socket/daphne/:/var/lib/https-portal/daphne/run/
      - ./system/https_portal/production/:/etc/nginx/conf.d/
      - ./system/logs/nginx/:/var/log/nginx/
      - ./ssl_certs:/var/lib/https-portal
      - ./system/https_portal/config/dev/nginx.conf.erb:/var/lib/nginx-conf/nginx.conf.erb:ro
      - ./system/https_portal/config/dev/www.pingo.jp.conf.erb:/var/lib/nginx-conf/www.pingo.jp.conf.erb:ro
      - ./system/https_portal/config/dev/www.pingo.jp.ssl.conf.erb:/var/lib/nginx-conf/www.pingo.jp.ssl.conf.erb:ro
    depends_on:
      - pingo_daphne


  pingo_daphne:
    container_name: pingo_daphne
    hostname: pingo_daphne
    image: "lionhu/wavus_pingo:v_${VERSION}"
    volumes:
      - ./system/logs/gunicorn/:/usr/src/logs/
#      - ./pingo/:/usr/src/app/
#      - ./system/supervisord/supervisord_django.conf:/etc/supervisord.conf
#      - ./pingo/entrypoint.sh:/usr/src/app/entrypoint.sh
      - ./system/socket/daphne/:/usr/src/app/system/run/
    ports:
     - 8000:8000
     - 8001:8001
    restart: always
    env_file:
      - ./pingo/.env.prod
    depends_on:
      - postgres
      - redis
      - elasticsearch
    entrypoint: ["/usr/src/app/entrypoint.sh"]

  postgres:
    hostname: postgres
    image: postgres:12.0-alpine
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./system/postgres/:/var/lib/postgresql/data/
    env_file:
      - ./system/.env.postgres

  celery:
    container_name: celery
    hostname: celery
    restart: always
    image: "lionhu/wavus_pingo:v_${VERSION}"
    volumes:
      - ./system/logs/celery/:/usr/src/logs/
      - ./pingo/:/usr/src/app/
#      - ./system/supervisord/supervisord_celery.conf:/etc/supervisord_celery.conf
#      - ./pingo/entrypoint_celery.sh:/usr/src/app/entrypoint.sh
    env_file:
      - ./pingo/.env.prod
    ports:
      - 5555:5555
    depends_on:
      - postgres
      - redis
      - pingo_daphne
      - elasticsearch
    entrypoint: [ "/usr/src/app/entrypoint.sh" ]

  redis:
    container_name: redis
    restart: always
    tty: true
    image: redis:alpine
    env_file:
      - ./system/.env.redis
    expose:
      - 6379
    volumes:
      - ./system/redis/redis_data:/var/redis
#      - ./system/redis/conf/6379.conf:/usr/local/etc/redis/redis.conf
    command: redis-server --appendonly yes

  redis-commander:
    container_name: redis_commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=Hisshghu3500
    ports:
      - 8081:8081
    depends_on:
      - redis
    links:
      - redis

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7.3-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: celery
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: my_vhost
    ports:
     - 5672:5672
     - 15672:15672
    volumes:
     - rabbitmq:/var/lib/rabbitmq/mnesia
    expose:
      - 5672
      - 15672

  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./system/elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx1024m -Xms1024m"
    volumes:
      - ./system/elasticsearch/data/:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: always


volumes:
  rabbitmq:
    driver: local
  jupiter:
    driver: local
